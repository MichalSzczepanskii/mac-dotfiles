return {}
-- return {
--   recommended = function()
--     return LazyVim.extras.wants({
--       root = {
--         "angular.json",
--         "nx.json", --support for nx workspace
--         "project.json",
--       },
--     })
--   end,

  -- {
  --   "nvim-treesitter",
  --   opts = function(_, opts)
  --     if type(opts.ensure_installed) == "table" then
  --       vim.list_extend(opts.ensure_installed, { "angular", "scss" })
  --     end
  --   end,
  -- },
  --
  -- -- angularls depends on typescript
  -- { import = "lazyvim.plugins.extras.lang.typescript" },
  --
  -- -- LSP Servers
  -- {
  --   "neovim/nvim-lspconfig",
  --   opts = {
  --     servers = {
  --       angularls = {},
  --     },
  --     setup = {
  --       angularls = function()
  --         LazyVim.lsp.on_attach(function(client)
  --           --HACK: disable angular renaming capability due to duplicate rename popping up
  --           client.server_capabilities.renameProvider = false
  --         end, "angularls")
  --       end,
  --     },
  --   },
  -- },
  --
  -- -- configure tsserver plugin
  -- {
  --   "neovim/nvim-lspconfig",
  --   opts = function(_, opts)
  --     lazyvim.extend(opts.servers.vtsls, "settings.vtsls.tsserver.globalplugins", {
  --       {
  --         name = "@angular/language-server",
  --         location = lazyvim.get_pkg_path("angular-language-server", "/node_modules/@angular/language-server"),
  --         enableforworkspacetypescriptversions = false,
  --       },
  --     })
  --   end,
  -- },
  --
  -- -- formatting
  -- {
  --   "conform.nvim",
  --   opts = function(_, opts)
  --     if lazyvim.has_extra("formatting.prettier") then
  --       opts.formatters_by_ft = opts.formatters_by_ft or {}
  --       opts.formatters_by_ft.htmlangular = { "prettier" }
  --     end
  --   end,
  -- },
}
